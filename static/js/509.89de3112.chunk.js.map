{"version":3,"file":"static/js/509.89de3112.chunk.js","mappings":"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","sources":["components/Image.js","components/Page.js","redux/slices/calendar.js","redux/slices/product.js","redux/slices/mail.js","redux/slices/chat.js","redux/slices/kanban.js","redux/rootReducer.js","redux/store.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nImage.propTypes = {\r\n  disabledEffect: PropTypes.bool,\r\n  effect: PropTypes.string,\r\n  ratio: PropTypes.oneOf(['4/3', '3/4', '6/4', '4/6', '16/9', '9/16', '21/9', '9/21', '1/1']),\r\n  sx: PropTypes.object,\r\n};\r\n\r\nexport default function Image({ ratio, disabledEffect = false, effect = 'blur', sx, ...other }) {\r\n  if (ratio) {\r\n    return (\r\n      <Box\r\n        component=\"span\"\r\n        sx={{\r\n          width: 1,\r\n          lineHeight: 0,\r\n          display: 'block',\r\n          overflow: 'hidden',\r\n          position: 'relative',\r\n          pt: getRatio(ratio),\r\n          '& .wrapper': {\r\n            top: 0,\r\n            left: 0,\r\n            right: 0,\r\n            bottom: 0,\r\n            lineHeight: 0,\r\n            position: 'absolute',\r\n            backgroundSize: 'cover !important',\r\n          },\r\n          ...sx,\r\n        }}\r\n      >\r\n        <Box\r\n          component={LazyLoadImage}\r\n          wrapperClassName=\"wrapper\"\r\n          effect={disabledEffect ? undefined : effect}\r\n          placeholderSrc=\"https://zone-assets-api.vercel.app/assets/img_placeholder.svg\"\r\n          sx={{ width: 1, height: 1, objectFit: 'cover' }}\r\n          {...other}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      component=\"span\"\r\n      sx={{\r\n        lineHeight: 0,\r\n        display: 'block',\r\n        overflow: 'hidden',\r\n        '& .wrapper': { width: 1, height: 1, backgroundSize: 'cover !important' },\r\n        ...sx,\r\n      }}\r\n    >\r\n      <Box\r\n        component={LazyLoadImage}\r\n        wrapperClassName=\"wrapper\"\r\n        effect={disabledEffect ? undefined : effect}\r\n        placeholderSrc=\"https://zone-assets-api.vercel.app/assets/img_placeholder.svg\"\r\n        sx={{ width: 1, height: 1, objectFit: 'cover' }}\r\n        {...other}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction getRatio(ratio = '1/1') {\r\n  return {\r\n    '4/3': 'calc(100% / 4 * 3)',\r\n    '3/4': 'calc(100% / 3 * 4)',\r\n    '6/4': 'calc(100% / 6 * 4)',\r\n    '4/6': 'calc(100% / 4 * 6)',\r\n    '16/9': 'calc(100% / 16 * 9)',\r\n    '9/16': 'calc(100% / 9 * 16)',\r\n    '21/9': 'calc(100% / 21 * 9)',\r\n    '9/21': 'calc(100% / 9 * 21)',\r\n    '1/1': '100%',\r\n  }[ratio];\r\n}\r\n","import PropTypes from 'prop-types';\r\nimport { Helmet } from 'react-helmet-async';\r\nimport { forwardRef } from 'react';\r\n// @mui\r\nimport { Box } from '@mui/material';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst Page = forwardRef(({ children, title = '', meta, ...other }, ref) => (\r\n  <>\r\n    <Helmet>\r\n      <title>{`${title} | Minimal-UI`}</title>\r\n      {meta}\r\n    </Helmet>\r\n\r\n    <Box ref={ref} {...other}>\r\n      {children}\r\n    </Box>\r\n  </>\r\n));\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string,\r\n  meta: PropTypes.node,\r\n};\r\n\r\nexport default Page;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n//\r\nimport { dispatch } from '../store';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  events: [],\r\n  isOpenModal: false,\r\n  selectedEventId: null,\r\n  selectedRange: null,\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'calendar',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET EVENTS\r\n    getEventsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.events = action.payload;\r\n    },\r\n\r\n    // CREATE EVENT\r\n    createEventSuccess(state, action) {\r\n      const newEvent = action.payload;\r\n      state.isLoading = false;\r\n      state.events = [...state.events, newEvent];\r\n    },\r\n\r\n    // UPDATE EVENT\r\n    updateEventSuccess(state, action) {\r\n      const event = action.payload;\r\n      const updateEvent = state.events.map((_event) => {\r\n        if (_event.id === event.id) {\r\n          return event;\r\n        }\r\n        return _event;\r\n      });\r\n\r\n      state.isLoading = false;\r\n      state.events = updateEvent;\r\n    },\r\n\r\n    // DELETE EVENT\r\n    deleteEventSuccess(state, action) {\r\n      const { eventId } = action.payload;\r\n      const deleteEvent = state.events.filter((event) => event.id !== eventId);\r\n      state.events = deleteEvent;\r\n    },\r\n\r\n    // SELECT EVENT\r\n    selectEvent(state, action) {\r\n      const eventId = action.payload;\r\n      state.isOpenModal = true;\r\n      state.selectedEventId = eventId;\r\n    },\r\n\r\n    // SELECT RANGE\r\n    selectRange(state, action) {\r\n      const { start, end } = action.payload;\r\n      state.isOpenModal = true;\r\n      state.selectedRange = { start, end };\r\n    },\r\n\r\n    // OPEN MODAL\r\n    openModal(state) {\r\n      state.isOpenModal = true;\r\n    },\r\n\r\n    // CLOSE MODAL\r\n    closeModal(state) {\r\n      state.isOpenModal = false;\r\n      state.selectedEventId = null;\r\n      state.selectedRange = null;\r\n    },\r\n  },\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// Actions\r\nexport const { openModal, closeModal, selectEvent } = slice.actions;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getEvents() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/calendar/events');\r\n      dispatch(slice.actions.getEventsSuccess(response.data.events));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function createEvent(newEvent) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.post('/api/calendar/events/new', newEvent);\r\n      dispatch(slice.actions.createEventSuccess(response.data.event));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function updateEvent(eventId, updateEvent) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.post('/api/calendar/events/update', {\r\n        eventId,\r\n        updateEvent,\r\n      });\r\n      dispatch(slice.actions.updateEventSuccess(response.data.event));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function deleteEvent(eventId) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      await axios.post('/api/calendar/events/delete', { eventId });\r\n      dispatch(slice.actions.deleteEventSuccess({ eventId }));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function selectRange(start, end) {\r\n  return async () => {\r\n    dispatch(\r\n      slice.actions.selectRange({\r\n        start: start.getTime(),\r\n        end: end.getTime(),\r\n      })\r\n    );\r\n  };\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport sum from 'lodash/sum';\r\nimport uniqBy from 'lodash/uniqBy';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n//\r\nimport { dispatch } from '../store';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  products: [],\r\n  product: null,\r\n  sortBy: null,\r\n  filters: {\r\n    gender: [],\r\n    category: 'All',\r\n    colors: [],\r\n    priceRange: '',\r\n    rating: '',\r\n  },\r\n  checkout: {\r\n    activeStep: 0,\r\n    cart: [],\r\n    subtotal: 0,\r\n    total: 0,\r\n    discount: 0,\r\n    shipping: 0,\r\n    billing: null,\r\n  },\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'product',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET PRODUCTS\r\n    getProductsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.products = action.payload;\r\n    },\r\n\r\n    // GET PRODUCT\r\n    getProductSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.product = action.payload;\r\n    },\r\n\r\n    //  SORT & FILTER PRODUCTS\r\n    sortByProducts(state, action) {\r\n      state.sortBy = action.payload;\r\n    },\r\n\r\n    filterProducts(state, action) {\r\n      state.filters.gender = action.payload.gender;\r\n      state.filters.category = action.payload.category;\r\n      state.filters.colors = action.payload.colors;\r\n      state.filters.priceRange = action.payload.priceRange;\r\n      state.filters.rating = action.payload.rating;\r\n    },\r\n\r\n    // CHECKOUT\r\n    getCart(state, action) {\r\n      const cart = action.payload;\r\n\r\n      const subtotal = sum(cart.map((cartItem) => cartItem.price * cartItem.quantity));\r\n      const discount = cart.length === 0 ? 0 : state.checkout.discount;\r\n      const shipping = cart.length === 0 ? 0 : state.checkout.shipping;\r\n      const billing = cart.length === 0 ? null : state.checkout.billing;\r\n\r\n      state.checkout.cart = cart;\r\n      state.checkout.discount = discount;\r\n      state.checkout.shipping = shipping;\r\n      state.checkout.billing = billing;\r\n      state.checkout.subtotal = subtotal;\r\n      state.checkout.total = subtotal - discount;\r\n    },\r\n\r\n    addCart(state, action) {\r\n      const product = action.payload;\r\n      const isEmptyCart = state.checkout.cart.length === 0;\r\n\r\n      if (isEmptyCart) {\r\n        state.checkout.cart = [...state.checkout.cart, product];\r\n      } else {\r\n        state.checkout.cart = state.checkout.cart.map((_product) => {\r\n          const isExisted = _product.id === product.id;\r\n          if (isExisted) {\r\n            return {\r\n              ..._product,\r\n              quantity: _product.quantity + 1,\r\n            };\r\n          }\r\n          return _product;\r\n        });\r\n      }\r\n      state.checkout.cart = uniqBy([...state.checkout.cart, product], 'id');\r\n    },\r\n\r\n    deleteCart(state, action) {\r\n      const updateCart = state.checkout.cart.filter((item) => item.id !== action.payload);\r\n\r\n      state.checkout.cart = updateCart;\r\n    },\r\n\r\n    resetCart(state) {\r\n      state.checkout.activeStep = 0;\r\n      state.checkout.cart = [];\r\n      state.checkout.total = 0;\r\n      state.checkout.subtotal = 0;\r\n      state.checkout.discount = 0;\r\n      state.checkout.shipping = 0;\r\n      state.checkout.billing = null;\r\n    },\r\n\r\n    onBackStep(state) {\r\n      state.checkout.activeStep -= 1;\r\n    },\r\n\r\n    onNextStep(state) {\r\n      state.checkout.activeStep += 1;\r\n    },\r\n\r\n    onGotoStep(state, action) {\r\n      const goToStep = action.payload;\r\n      state.checkout.activeStep = goToStep;\r\n    },\r\n\r\n    increaseQuantity(state, action) {\r\n      const productId = action.payload;\r\n      const updateCart = state.checkout.cart.map((product) => {\r\n        if (product.id === productId) {\r\n          return {\r\n            ...product,\r\n            quantity: product.quantity + 1,\r\n          };\r\n        }\r\n        return product;\r\n      });\r\n\r\n      state.checkout.cart = updateCart;\r\n    },\r\n\r\n    decreaseQuantity(state, action) {\r\n      const productId = action.payload;\r\n      const updateCart = state.checkout.cart.map((product) => {\r\n        if (product.id === productId) {\r\n          return {\r\n            ...product,\r\n            quantity: product.quantity - 1,\r\n          };\r\n        }\r\n        return product;\r\n      });\r\n\r\n      state.checkout.cart = updateCart;\r\n    },\r\n\r\n    createBilling(state, action) {\r\n      state.checkout.billing = action.payload;\r\n    },\r\n\r\n    applyDiscount(state, action) {\r\n      const discount = action.payload;\r\n      state.checkout.discount = discount;\r\n      state.checkout.total = state.checkout.subtotal - discount;\r\n    },\r\n\r\n    applyShipping(state, action) {\r\n      const shipping = action.payload;\r\n      state.checkout.shipping = shipping;\r\n      state.checkout.total = state.checkout.subtotal - state.checkout.discount + shipping;\r\n    },\r\n  },\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// Actions\r\nexport const {\r\n  getCart,\r\n  addCart,\r\n  resetCart,\r\n  onGotoStep,\r\n  onBackStep,\r\n  onNextStep,\r\n  deleteCart,\r\n  createBilling,\r\n  applyShipping,\r\n  applyDiscount,\r\n  increaseQuantity,\r\n  decreaseQuantity,\r\n  sortByProducts,\r\n  filterProducts,\r\n} = slice.actions;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getProducts() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/products');\r\n      dispatch(slice.actions.getProductsSuccess(response.data.products));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getProduct(name) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/products/product', {\r\n        params: { name },\r\n      });\r\n      dispatch(slice.actions.getProductSuccess(response.data.product));\r\n    } catch (error) {\r\n      console.error(error);\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n//\r\nimport { dispatch } from '../store';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction objFromArray(array, key = 'id') {\r\n  return array.reduce((accumulator, current) => {\r\n    accumulator[current[key]] = current;\r\n    return accumulator;\r\n  }, {});\r\n}\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  mails: { byId: {}, allIds: [] },\r\n  labels: [],\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'mail',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET LABELS\r\n    getLabelsSuccess(state, action) {\r\n      state.isLoading = false;\r\n      state.labels = action.payload;\r\n    },\r\n\r\n    // GET MAILS\r\n    getMailsSuccess(state, action) {\r\n      const mails = action.payload;\r\n\r\n      state.isLoading = false;\r\n      state.mails.byId = objFromArray(mails);\r\n      state.mails.allIds = Object.keys(state.mails.byId);\r\n    },\r\n\r\n    // GET MAIL\r\n    getMailSuccess(state, action) {\r\n      const mail = action.payload;\r\n\r\n      state.mails.byId[mail.id] = mail;\r\n      if (!state.mails.allIds.includes(mail.id)) {\r\n        state.mails.allIds.push(mail.id);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getLabels() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/mail/labels');\r\n      dispatch(slice.actions.getLabelsSuccess(response.data.labels));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getMails(params) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/mail/mails', { params });\r\n      dispatch(slice.actions.getMailsSuccess(response.data.mails));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getMail(mailId) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/mail/mail', {\r\n        params: { mailId },\r\n      });\r\n      dispatch(slice.actions.getMailSuccess(response.data.mail));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n//\r\nimport { dispatch } from '../store';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction objFromArray(array, key = 'id') {\r\n  return array.reduce((accumulator, current) => {\r\n    accumulator[current[key]] = current;\r\n    return accumulator;\r\n  }, {});\r\n}\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  contacts: { byId: {}, allIds: [] },\r\n  conversations: { byId: {}, allIds: [] },\r\n  activeConversationId: null,\r\n  participants: [],\r\n  recipients: [],\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'chat',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET CONTACT SSUCCESS\r\n    getContactsSuccess(state, action) {\r\n      const contacts = action.payload;\r\n\r\n      state.contacts.byId = objFromArray(contacts);\r\n      state.contacts.allIds = Object.keys(state.contacts.byId);\r\n    },\r\n\r\n    // GET CONVERSATIONS\r\n    getConversationsSuccess(state, action) {\r\n      const conversations = action.payload;\r\n\r\n      state.conversations.byId = objFromArray(conversations);\r\n      state.conversations.allIds = Object.keys(state.conversations.byId);\r\n    },\r\n\r\n    // GET CONVERSATION\r\n    getConversationSuccess(state, action) {\r\n      const conversation = action.payload;\r\n\r\n      if (conversation) {\r\n        state.conversations.byId[conversation.id] = conversation;\r\n        state.activeConversationId = conversation.id;\r\n        if (!state.conversations.allIds.includes(conversation.id)) {\r\n          state.conversations.allIds.push(conversation.id);\r\n        }\r\n      } else {\r\n        state.activeConversationId = null;\r\n      }\r\n    },\r\n\r\n    // ON SEND MESSAGE\r\n    onSendMessage(state, action) {\r\n      const conversation = action.payload;\r\n      const { conversationId, messageId, message, contentType, attachments, createdAt, senderId } = conversation;\r\n\r\n      const newMessage = {\r\n        id: messageId,\r\n        body: message,\r\n        contentType,\r\n        attachments,\r\n        createdAt,\r\n        senderId,\r\n      };\r\n\r\n      state.conversations.byId[conversationId].messages.push(newMessage);\r\n    },\r\n\r\n    markConversationAsReadSuccess(state, action) {\r\n      const { conversationId } = action.payload;\r\n      const conversation = state.conversations.byId[conversationId];\r\n      if (conversation) {\r\n        conversation.unreadCount = 0;\r\n      }\r\n    },\r\n\r\n    // GET PARTICIPANTS\r\n    getParticipantsSuccess(state, action) {\r\n      const participants = action.payload;\r\n      state.participants = participants;\r\n    },\r\n\r\n    // RESET ACTIVE CONVERSATION\r\n    resetActiveConversation(state) {\r\n      state.activeConversationId = null;\r\n    },\r\n\r\n    addRecipients(state, action) {\r\n      const recipients = action.payload;\r\n      state.recipients = recipients;\r\n    },\r\n  },\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\n// Actions\r\nexport const { addRecipients, onSendMessage, resetActiveConversation } = slice.actions;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getContacts() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/chat/contacts');\r\n      dispatch(slice.actions.getContactsSuccess(response.data.contacts));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getConversations() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/chat/conversations');\r\n      dispatch(slice.actions.getConversationsSuccess(response.data.conversations));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getConversation(conversationKey) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/chat/conversation', {\r\n        params: { conversationKey },\r\n      });\r\n      dispatch(slice.actions.getConversationSuccess(response.data.conversation));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function markConversationAsRead(conversationId) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      await axios.get('/api/chat/conversation/mark-as-seen', {\r\n        params: { conversationId },\r\n      });\r\n      dispatch(slice.actions.markConversationAsReadSuccess({ conversationId }));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getParticipants(conversationKey) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/chat/participants', {\r\n        params: { conversationKey },\r\n      });\r\n      dispatch(slice.actions.getParticipantsSuccess(response.data.participants));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport omit from 'lodash/omit';\r\n// utils\r\nimport axios from '../../utils/axios';\r\n//\r\nimport { dispatch } from '../store';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nfunction objFromArray(array, key = 'id') {\r\n  return array.reduce((accumulator, current) => {\r\n    accumulator[current[key]] = current;\r\n    return accumulator;\r\n  }, {});\r\n}\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  error: null,\r\n  board: {\r\n    cards: {},\r\n    columns: {},\r\n    columnOrder: [],\r\n  },\r\n};\r\n\r\nconst slice = createSlice({\r\n  name: 'kanban',\r\n  initialState,\r\n  reducers: {\r\n    // START LOADING\r\n    startLoading(state) {\r\n      state.isLoading = true;\r\n    },\r\n\r\n    // HAS ERROR\r\n    hasError(state, action) {\r\n      state.isLoading = false;\r\n      state.error = action.payload;\r\n    },\r\n\r\n    // GET BOARD\r\n    getBoardSuccess(state, action) {\r\n      state.isLoading = false;\r\n      const board = action.payload;\r\n      const cards = objFromArray(board.cards);\r\n      const columns = objFromArray(board.columns);\r\n      const { columnOrder } = board;\r\n      state.board = {\r\n        cards,\r\n        columns,\r\n        columnOrder,\r\n      };\r\n    },\r\n\r\n    // CREATE NEW COLUMN\r\n    createColumnSuccess(state, action) {\r\n      const newColumn = action.payload;\r\n      state.isLoading = false;\r\n      state.board.columns = {\r\n        ...state.board.columns,\r\n        [newColumn.id]: newColumn,\r\n      };\r\n      state.board.columnOrder.push(newColumn.id);\r\n    },\r\n\r\n    persistCard(state, action) {\r\n      const columns = action.payload;\r\n      state.board.columns = columns;\r\n    },\r\n\r\n    persistColumn(state, action) {\r\n      state.board.columnOrder = action.payload;\r\n    },\r\n\r\n    addTask(state, action) {\r\n      const { card, columnId } = action.payload;\r\n\r\n      state.board.cards[card.id] = card;\r\n      state.board.columns[columnId].cardIds.push(card.id);\r\n    },\r\n\r\n    deleteTask(state, action) {\r\n      const { cardId, columnId } = action.payload;\r\n\r\n      state.board.columns[columnId].cardIds = state.board.columns[columnId].cardIds.filter((id) => id !== cardId);\r\n      state.board.cards = omit(state.board.cards, [cardId]);\r\n    },\r\n\r\n    // UPDATE COLUMN\r\n    updateColumnSuccess(state, action) {\r\n      const column = action.payload;\r\n\r\n      state.isLoading = false;\r\n      state.board.columns[column.id] = column;\r\n    },\r\n\r\n    // DELETE COLUMN\r\n    deleteColumnSuccess(state, action) {\r\n      const { columnId } = action.payload;\r\n      const deletedColumn = state.board.columns[columnId];\r\n\r\n      state.isLoading = false;\r\n      state.board.columns = omit(state.board.columns, [columnId]);\r\n      state.board.cards = omit(state.board.cards, [...deletedColumn.cardIds]);\r\n      state.board.columnOrder = state.board.columnOrder.filter((c) => c !== columnId);\r\n    },\r\n  },\r\n});\r\n\r\n// Reducer\r\nexport default slice.reducer;\r\n\r\nexport const { actions } = slice;\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function getBoard() {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.get('/api/kanban/board');\r\n      dispatch(slice.actions.getBoardSuccess(response.data.board));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function createColumn(newColumn) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.post('/api/kanban/columns/new', newColumn);\r\n      dispatch(slice.actions.createColumnSuccess(response.data.column));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function updateColumn(columnId, updateColumn) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      const response = await axios.post('/api/kanban/columns/update', {\r\n        columnId,\r\n        updateColumn,\r\n      });\r\n      dispatch(slice.actions.updateColumnSuccess(response.data.column));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function deleteColumn(columnId) {\r\n  return async () => {\r\n    dispatch(slice.actions.startLoading());\r\n    try {\r\n      await axios.post('/api/kanban/columns/delete', { columnId });\r\n      dispatch(slice.actions.deleteColumnSuccess({ columnId }));\r\n    } catch (error) {\r\n      dispatch(slice.actions.hasError(error));\r\n    }\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function persistColumn(newColumnOrder) {\r\n  return () => {\r\n    dispatch(slice.actions.persistColumn(newColumnOrder));\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function persistCard(columns) {\r\n  return () => {\r\n    dispatch(slice.actions.persistCard(columns));\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function addTask({ card, columnId }) {\r\n  return () => {\r\n    dispatch(slice.actions.addTask({ card, columnId }));\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nexport function deleteTask({ cardId, columnId }) {\r\n  return (dispatch) => {\r\n    dispatch(slice.actions.deleteTask({ cardId, columnId }));\r\n  };\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\n// slices\r\nimport mailReducer from './slices/mail';\r\nimport chatReducer from './slices/chat';\r\nimport productReducer from './slices/product';\r\nimport calendarReducer from './slices/calendar';\r\nimport kanbanReducer from './slices/kanban';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst rootPersistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  keyPrefix: 'redux-',\r\n  whitelist: [],\r\n};\r\n\r\nconst productPersistConfig = {\r\n  key: 'product',\r\n  storage,\r\n  keyPrefix: 'redux-',\r\n  whitelist: ['sortBy', 'checkout'],\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  mail: mailReducer,\r\n  chat: chatReducer,\r\n  calendar: calendarReducer,\r\n  kanban: kanbanReducer,\r\n  product: persistReducer(productPersistConfig, productReducer),\r\n});\r\n\r\nexport { rootPersistConfig, rootReducer };\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { useDispatch as useAppDispatch, useSelector as useAppSelector } from 'react-redux';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport { rootPersistConfig, rootReducer } from './rootReducer';\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nconst store = configureStore({\r\n  reducer: persistReducer(rootPersistConfig, rootReducer),\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: false,\r\n      immutableCheck: false,\r\n    }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst { dispatch } = store;\r\n\r\nconst useSelector = useAppSelector;\r\n\r\nconst useDispatch = () => useAppDispatch();\r\n\r\nexport { store, persistor, dispatch, useSelector, useDispatch };\r\n"],"names":["Image","ratio","disabledEffect","effect","sx","other","component","width","lineHeight","display","overflow","position","pt","getRatio","top","left","right","bottom","backgroundSize","LazyLoadImage","wrapperClassName","undefined","placeholderSrc","height","objectFit","Page","forwardRef","ref","children","title","meta","propTypes","PropTypes","slice","createSlice","name","initialState","isLoading","error","events","isOpenModal","selectedEventId","selectedRange","reducers","startLoading","state","hasError","action","payload","getEventsSuccess","createEventSuccess","newEvent","updateEventSuccess","event","updateEvent","map","_event","id","deleteEventSuccess","eventId","deleteEvent","filter","selectEvent","selectRange","start","end","openModal","closeModal","actions","products","product","sortBy","filters","gender","category","colors","priceRange","rating","checkout","activeStep","cart","subtotal","total","discount","shipping","billing","getProductsSuccess","getProductSuccess","sortByProducts","filterProducts","getCart","sum","cartItem","price","quantity","length","addCart","isEmptyCart","_product","uniqBy","deleteCart","updateCart","item","resetCart","onBackStep","onNextStep","onGotoStep","goToStep","increaseQuantity","productId","decreaseQuantity","createBilling","applyDiscount","applyShipping","mails","byId","allIds","labels","getLabelsSuccess","getMailsSuccess","array","key","reduce","accumulator","current","objFromArray","Object","keys","getMailSuccess","mail","includes","push","contacts","conversations","activeConversationId","participants","recipients","getContactsSuccess","getConversationsSuccess","getConversationSuccess","conversation","onSendMessage","conversationId","newMessage","messageId","body","message","contentType","attachments","createdAt","senderId","messages","markConversationAsReadSuccess","unreadCount","getParticipantsSuccess","resetActiveConversation","addRecipients","board","cards","columns","columnOrder","getBoardSuccess","createColumnSuccess","newColumn","persistCard","persistColumn","addTask","card","columnId","cardIds","deleteTask","cardId","omit","updateColumnSuccess","column","deleteColumnSuccess","deletedColumn","c","rootPersistConfig","storage","keyPrefix","whitelist","productPersistConfig","rootReducer","combineReducers","mailReducer","chat","chatReducer","calendar","calendarReducer","kanban","kanbanReducer","persistReducer","productReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","immutableCheck","persistStore","dispatch","useAppSelector"],"sourceRoot":""}